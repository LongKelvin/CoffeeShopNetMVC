@model CoffeeShop.Web.Infrastucture.Core.PaginationSet<CoffeeShop.Web.Models.ProductViewModel>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles{

}

<section class="product_section layout_padding custom-container">
    <div class="heading_container heading_center">
        <h2>
            Our <span>Menu</span>
        </h2>
    </div>

    <div class="top-search justify-content-end mb-3 col-sm-12" style="display: flex;">
        <form method="get" action="/search-product">
            <div class="justify-content-end">
                <div class="input-group row">
                    <input autocomplete="off" type="text" class="form-control mr-1" name="keyword" id="searchInput" placeholder="Search keyword">
                    <button class="btn btn-dark " id="btnSearch" type="submit">Search</button>
                </div>
            </div>
        </form>
    </div>

    <div class="row text-right m-0 justify-content-end col-sm-12">
        <ul class="horizontal-list justify-content-end text-capitalize space-between">
            <li>Sắp xếp : </li>
            <li><a class="active" href="?page=@Model.Page&sort=popular">Phổ biến</a></li> |
            <li><a href="?page=@Model.Page&sort=new">Sản phẩm mới </a></li> |
            <li><a href="?page=@Model.Page&sort=discount">Khuyến mãi</a></li> |
            <li><a href="?page=@Model.Page&sort=priceLowHigh">Giá:Thấp đến Cao </a></li>|
            <li><a href="?page=@Model.Page&sort=priceHighLow">Giá: Cao đến Thấp </a></li>
        </ul>
    </div>
    <div class="row flex-column-reverse flex-lg-row">
        <div class="col-lg-3 col-md-4 col-lg-pull-9 col-md-pull-8 ">
            <div class="margin-top">
                @*Cart panel section*@
                @{ Html.RenderAction("CartPanel", "ShoppingCart");}
                @*Product categories section*@
                @{ Html.RenderAction("Index", "ProductCategory");}
            </div>
        </div>
        <div class="col-lg-9 col-lg-push-3 col-md-8 col-md-push-4 ">

            @if (Model.Items.Count == 0)
            {
            <div class="row w-100  text-center ">
                <div class=" w-100 align-items-center text-black-50"> <b>No product to display</b></div>
            </div>

            @*<div class="btn-box">
                    <a href="@Url.Action("Index","Product")">
                        View All products
                    </a>
                </div>*@
            }
            else
            {

            <div class="row">
                @foreach (var item in Model.Items)
                    {
                        var url = "/" + item.Alias + "-id-" + item.ID;

                <div class="col-sm-6 col-md-4 col-lg-4">
                    <div class="box">
                        <div class="option_container">
                            <div class="options">
                                <a href="@url" class="option3">
                                    View Detail
                                </a>
                                <a data-id="@item.ID" onclick="addItemToCart(@item.ID)" class="option1">
                                    Add To Cart
                                </a>
                                <a data-id="@item.ID" onclick="addItemToCart(@item.ID)" href="@Url.Action("Index","ShoppingCart")" class="option2">
                                    Order Now
                                </a>
                            </div>
                        </div>
                        <div class="img-box">

                            <img src="@item.Images" />
                        </div>
                        <div class="detail-box">
                            <h5>
                                @item.Name
                            </h5>
                            <h6>
                                @item.Price.ToString("N2")
                            </h6>
                        </div>
                    </div>
                </div>
                    }
            </div>

            @*<div class="btn-box">
                    <a href="">
                        View All products
                    </a>
                </div>*@
            }
        </div>
    </div>

    <div class="clearfix">
        @if (Model.TotalPages > 1)
        {
            // Create numeric links
            var startPageIndex = Math.Max(1, Model.Page - Model.Page / 2);
            var endPageIndex = Math.Min(Model.TotalPages, Model.Page + Model.Page / 2);

        <nav aria-label="Page navigation example">

            <ul class="pagination justify-content-end">
                @if (Model.Page > 1)
                    {
                <li class="page-item">
                    <a class="page-link" href="?page=1" aria-label="First">
                        First
                    </a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="?page=@(Model.Page-1)" aria-label="Previous">
                        Previous
                    </a>
                </li>
                    }
                    else
                    {
                <li class="page-item disabled">

                    <a class="page-link" href="?page=1" aria-label="First">
                        First
                    </a>
                </li>
                <li class="page-item disabled">
                    <a class="page-link" href="?page=@(Model.Page-1)" aria-label="Previous">
                        Previous
                    </a>
                </li>
                    }

                @for (int i = startPageIndex; i <= endPageIndex; i++)
                    {
                        if (Model.Page == i)
                        {
                <li class="page-item active"><a class="page-link" ref="?page=@i" title="Trang @i">@i</a></li>
                        }
                        else
                        {
                <li class="page-item"><a class="page-link" href="?page=@i" title="Trang @i">@i</a></li>
                        }
                    }
                @if (Model.Page < Model.TotalPages)
                    {
                <li class="page-item">
                    <a class="page-link" href="?page=@(Model.Page+1)" aria-label="Next">
                        Next
                    </a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="?page=@Model.TotalPages" aria-label="Last">
                        Last
                    </a>
                </li>
                    }
                    else
                    {
                <li class="page-item disabled">
                    <a class="page-link" href="?page=@(Model.Page)" aria-label="Next">
                        Next
                    </a>
                </li>
                <li class="page-item disabled">
                    <a class="page-link" href="?page=@Model.TotalPages" aria-label="Last">
                        Last
                    </a>
                </li>
                    }
            </ul>
        </nav>
        }
    </div>
</section>
@*<script src="~/Assets/Admin/lib/jquery-ui-1.13.1.custom/external/jquery/jquery.js"></script>*@
@*<script src="~/Assets/Client/js/jquery-3.4.1.min.js"></script>
    <script src="~/Assets/Admin/lib/jquery-ui-1.13.1.custom/jquery-ui.js"></script>*@

@section Scripts{
    <script>
        $(document).ready(function () {

            $('#searchInput').autocomplete({

                source: function (request, response) {
                    $.ajax({
                        url: "Product/GetListProductName",

                        data: {
                            name: request.term
                        },
                        success: function (result) {
                            response(result.data)
                        }
                    });
                },
                minLength: 1,
                select: function (event, ui) {
                    $('#searchInput').val(ui.item.value);
                    return false;
                }
            }).autocomplete("instance")._renderItem = function (ul, item) {
                return $("<li>")
                    .append("<div>" + item.value + "<br>" + "</div>")
                    .appendTo(ul);
                }

            cartPanel.loadData();
        });

        //$('.remove-item').click(function () {
        //    $(this).closest('li').remove();
        //    checkCartList();
        //    alert("Button remove item clicking")
        //})

        //function checkCartList() {
        //    if ($('.cart-order li').length === 0) {
        //        $('.cart-order li').html('Cart is empty')
        //    }
        //}
    </script>
}